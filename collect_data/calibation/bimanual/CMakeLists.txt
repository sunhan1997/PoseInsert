cmake_minimum_required(VERSION 3.10)
project(arx_r5_python VERSION 1.0)

set(pybind11_DIR /home/agilex/miniconda3/envs/rise/lib/python3.8/site-packages/pybind11/share/cmake/pybind11/cmake)

find_package(pybind11 REQUIRED)

include_directories(${PROJECT_SOURCE_DIR}/include)
include_directories(${PROJECT_SOURCE_DIR}/lib/arx_r5_src/include)
include_directories(${PROJECT_SOURCE_DIR}/lib/arx_hardware_interface/include)

pybind11_add_module(${PROJECT_NAME} src/single_arm_interface.cpp)
pybind11_add_module(${PROJECT_NAME}_tools src/arm_tools.cpp)

target_link_libraries(${PROJECT_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/lib/arx_r5_src/libarx_r5_src.so ${CMAKE_CURRENT_SOURCE_DIR}/lib/arx_hardware_interface/libarx_hardware_interface.so pybind11::module)
target_link_libraries(${PROJECT_NAME}_tools PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/lib/arx_r5_src/libarx_r5_src.so ${CMAKE_CURRENT_SOURCE_DIR}/lib/arx_hardware_interface/libarx_hardware_interface.so pybind11::module)

# 设置安装路径
set(CMAKE_INSTALL_PREFIX "${CMAKE_CURRENT_SOURCE_DIR}/api/" CACHE PATH "Installation Directory" FORCE)

install(DIRECTORY lib/ DESTINATION ./)

install(TARGETS ${PROJECT_NAME} ${PROJECT_NAME}_tools
        LIBRARY DESTINATION ./${PROJECT_NAME}/
        ARCHIVE DESTINATION ./${PROJECT_NAME}/)
